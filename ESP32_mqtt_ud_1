#include <WiFi.h>
#include <PubSubClient.h>

int port=1883;
const char* ssid="Beks";
const char* pass="b1e2k3s4";
const char* brokerUser = "sasha.petrov.olx@gmail.com";
const char* brokerPass = "a6efcb63";
const char* broker = "mqtt.dioty.co";
const char* outTopic ="/sasha.petrov.olx@gmail.com/out";
const char* out1Topic ="/sasha.petrov.olx@gmail.com/out1";
const char* out2Topic ="/sasha.petrov.olx@gmail.com/out2";
const char* out3Topic ="/sasha.petrov.olx@gmail.com/out3";
const char* out4Topic ="/sasha.petrov.olx@gmail.com/out4";
const char* inTopic ="/sasha.petrov.olx@gmail.com/in";

#include "DHT.h"
#define DHTTYPE DHT11  

#define LED_bedroom   16
#define LED_kitchen   17

#define PIN_TRIG 12
#define PIN_ECHO 13
int dist=0;
String btn="";
String btn1="";
boolean True=false;
uint8_t DHTPin = 25; 
uint8_t DHTPin1 = 15;
DHT dht(DHTPin, DHTTYPE);
DHT dht1(DHTPin1, DHTTYPE);

  
WiFiClient espClient;
PubSubClient client(espClient);
long currentTime, lastTime;
long currentTime1, lastTime1;
long currentTime2, lastTime2;
long currentTime3, lastTime3;
long currentTime4, lastTime4;
int count = 0;
int count1 = 0;
char messages[50];
 
void setupWifi(){
  delay(5000);
  Serial.print("\nConnecting to");
  Serial.println(ssid);
  WiFi.begin(ssid, pass);
  while(WiFi.status() != WL_CONNECTED) {
    delay(100);
    Serial.print("-");
  }
  Serial.print("\nConnected to ");
  Serial.println(ssid);
}
 
void reconnect(){
  while(!client.connected()){
    Serial.print("\nConncting to ");
    Serial.println(broker);
    if(client.connect("/sasha.petrov.olx@gmail.com/", brokerUser, brokerPass)){
      Serial.print("\nConnected to ");
      Serial.println(broker);
      client.subscribe(inTopic);
    } else {
      Serial.println("\n Trying to reconnect");
      delay(5000);
    }
  }
}
 
void callback(char* topic, byte* payload, unsigned int length){
  btn="";
  Serial.print("Message sended: ");
  Serial.println(topic);
  for(int i=0; i<length; i++){
    btn+=(String)((char)payload[i]);
  }
  if(btn.equals("b1")){
    digitalWrite(LED_bedroom,1);
    }
    else if(btn.equals("b0")){digitalWrite(LED_bedroom,0);
    }

    else if(btn.equals("k1")){
    digitalWrite(LED_kitchen,1);
    }
    else if(btn.equals("k0")){digitalWrite(LED_kitchen,0);
    }
  Serial.println();
}
 
void setup() {
    Serial.begin(115200);
    
    pinMode(DHTPin, INPUT);
    dht.begin();              
    pinMode(DHTPin1, INPUT);
    dht1.begin(); 

    pinMode(LED_kitchen, OUTPUT);
    pinMode(LED_bedroom, OUTPUT);

    pinMode(PIN_TRIG, OUTPUT);
    pinMode(PIN_ECHO, INPUT);

    
    pinMode(36, INPUT);
    pinMode(39, INPUT);
    pinMode(34, INPUT);

    
    setupWifi();
    client.setServer(broker, port);
    client.setCallback(callback);
}
 
void loop() {
    while(True){
    if(!client.connected()){
      reconnect();
    }
  client.loop();
 
  currentTime = millis();
  if(currentTime - lastTime > 2000){
    count=(int)dht.readHumidity();
    snprintf(messages, 75, "H: %2d | T: %2d", count,(int)dht.readTemperature());
    Serial.print("1---");
    Serial.println(messages);
    client.publish(outTopic, messages);
    lastTime = millis();
  }
  currentTime1 = millis();
  if(currentTime1 - lastTime1 > 2000){
    count1=(int)dht1.readHumidity();
    snprintf(messages, 75, "H: %2d | T: %2d", count1,(int)dht1.readTemperature());
    Serial.print("2---");
    Serial.println(messages);
    client.publish(out1Topic, messages);
    lastTime1 = millis();
  }
  currentTime2 = millis();
  if(currentTime2 - lastTime2 > 2000){
    snprintf(messages, 75, "FireLevel: %2d",(4095-analogRead(39)));
    Serial.print("3---");
    Serial.println(messages);
    client.publish(out2Topic, messages);
    lastTime2 = millis();
  }
   currentTime3 = millis();
  if(currentTime3 - lastTime3 > 2000){
    snprintf(messages, 75, "WaterLevel: %2d",analogRead(34));
    Serial.print("4---");
    Serial.println(messages);
    client.publish(out3Topic, messages);
    lastTime3 = millis();
  }
    currentTime4 = millis();
  if(currentTime4 - lastTime4 > 2000){
    digitalWrite(PIN_TRIG, LOW);
  delayMicroseconds(5);
  digitalWrite(PIN_TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(PIN_TRIG, LOW);
 dist= (pulseIn(PIN_ECHO, HIGH) / 2) / 29.1;
    snprintf(messages, 75, "Distance: %2d",dist);
    Serial.print("5---");
    Serial.println(messages);
    client.publish(out4Topic, messages);
    lastTime4 = millis();
  }
}}
