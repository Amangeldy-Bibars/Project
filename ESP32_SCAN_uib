#include <WiFi.h>
#include <HTTPClient.h>
 #include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEScan.h>
#include <BLEAdvertisedDevice.h>

const char* ssid = "UIB";
const char* password =  "qz311RNOju33VE";


int scanTime = 30; 
BLEScan* pBLEScan;

class MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {
    void onResult(BLEAdvertisedDevice advertisedDevice) {
      //Serial.printf("Advertised Device: %s \n", advertisedDevice.toString().c_str());

    if(WiFi.status()== WL_CONNECTED){  
 
   HTTPClient http;   
 
   http.begin("http://192.168.12.11/testClassifier/api/BLE/GettingValues");
     
   http.addHeader("Content-Type", "application/json; charset=utf-8");


     //advertisedDevice.toString().c_str()
  String s1(advertisedDevice.toString().c_str());
  
  String s3(advertisedDevice.getRSSI());
  String s2 = "{ \"value\": \"DeviceID: 8, RSSI: " + s3 + ", " + s1 + "\"}";
  
  //Serial.println("\n RSSI\n");
  //Serial.println(s3);  
  //Serial.println(advertisedDevice.getRSSI());
   int httpResponseCode = http.POST(s2);   
 
   //if(httpResponseCode>0){
 
    //String response = http.getString();                       
 
    //Serial.println(httpResponseCode);  
    //Serial.println(response);           
 
   //}else{
 
    //Serial.print("Error on sending POST: ");
    //Serial.println(httpResponseCode);
 
   //}
 
   http.end();  
 
 }else{
 
    //Serial.println("Error in WiFi connection");   
 
 }
      
    }
};

void setup() {
 
  Serial.begin(115200);
  delay(4000); 
 
  WiFi.begin(ssid, password); 
 
  while (WiFi.status() != WL_CONNECTED) { 
    delay(1000);
    //Serial.println("Connecting to WiFi..");
  }
 
  //Serial.println("Connected to the WiFi network");
delay(2000);
  BLEDevice::init("");
  pBLEScan = BLEDevice::getScan(); 
  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());
  pBLEScan->setActiveScan(true);
  pBLEScan->setInterval(100);
  pBLEScan->setWindow(99);  
 delay(2000);
}
 
void loop() {
 
 
 
  


  BLEScanResults foundDevices = pBLEScan->start(scanTime, false);
  delay(2000);
  //Serial.print("Devices found: ");
  //Serial.println(foundDevices.getCount());
  
  //Serial.println("Scan done");
  pBLEScan->clearResults();  
  
  
  
  delay(2000);
  
 
}
